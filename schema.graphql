# source: http://localhost:8080/graphql
# timestamp: Sun Jul 21 2019 22:35:23 GMT+0100 (British Summer Time)

type CascadePermission {
  ALL_PERMISSIONS: CascadePermission
  defaultPerm: Boolean!
  discordPerm: [Permission]
  module: Module
  discordPerms: [Permission]
  permissionRaw: String
}

"""Built-in scalar representing an instant in time"""
scalar Date

enum Flag {
  BETA
  SPOTIFY
  MUSIC_SERVICES
}

type Group {
  name: String
  roleIds: [Long]
  id: String
  permissions: [String]
}

type GuildCommandInfo {
  defaultCommand: String
  forceDefault: Boolean!
  aliases: [String]
  command: String
  enabled: Boolean!
}

type GuildData {
  guildCommandInfos: [GuildCommandInfo]
  enabledFlags: [Flag]
  stateLock: UUID
  permissions: GuildPermissions
  locale: Locale
  creationDate: Date
  guildId: Long!
  coreSettings: GuildSettingsCore
}

type GuildPermissions {
  mode: PermissionMode
  groups: [Group]
  users: Map_Long_UserScalar
}

type GuildSettingsCore {
  deleteCommand: Boolean!
  showPermErrors: Boolean!
  adminsHaveAllPerms: Boolean!
  prefix: String
  enabledModules: [Module]
  mentionPrefix: Boolean!
  allowTagCommands: Boolean!
  useEmbedForMessages: Boolean!
  showModuleErrors: Boolean!
  tags: Map_String_TagScalar
}

type ICommandMain {
  absoluteCommand: String
  module: Module
  subCommands: [ISubCommand]
  flags: [Flag]
  permission: CascadePermission
  command: String
}

type ISubCommand {
  flags: [Flag]
  parent: String
  permission: CascadePermission
  absoluteCommand: String
  command: String
}

"""JSON object"""
scalar JSONObject

enum Locale {
  ENGLISH_UK
  ENGLISH_US
}

"""Long type"""
scalar Long

"""Built-in scalar for map-like structures"""
scalar Map_Long_UserScalar

"""Built-in scalar for map-like structures"""
scalar Map_String_TagScalar

enum Module {
  CORE
  MANAGEMENT
  MUSIC
  INFORMATIONAL
  MODERATION
  FUN
  DEVELOPER
}

enum Permission {
  CREATE_INSTANT_INVITE
  KICK_MEMBERS
  BAN_MEMBERS
  ADMINISTRATOR
  MANAGE_CHANNEL
  MANAGE_SERVER
  MESSAGE_ADD_REACTION
  VIEW_AUDIT_LOGS
  PRIORITY_SPEAKER
  VIEW_CHANNEL
  MESSAGE_READ
  MESSAGE_WRITE
  MESSAGE_TTS
  MESSAGE_MANAGE
  MESSAGE_EMBED_LINKS
  MESSAGE_ATTACH_FILES
  MESSAGE_HISTORY
  MESSAGE_MENTION_EVERYONE
  MESSAGE_EXT_EMOJI
  VOICE_CONNECT
  VOICE_SPEAK
  VOICE_MUTE_OTHERS
  VOICE_DEAF_OTHERS
  VOICE_MOVE_OTHERS
  VOICE_USE_VAD
  NICKNAME_CHANGE
  NICKNAME_MANAGE
  MANAGE_ROLES
  MANAGE_PERMISSIONS
  MANAGE_WEBHOOKS
  MANAGE_EMOTES
  UNKNOWN
}

enum PermissionMode {
  HIERARCHICAL
  MOST_RESTRICTIVE
}

type Playlist {
  name: String
  id: String!
  ownerId: Long!
  tracks: [String]
  scope: PlaylistScope
}

enum PlaylistScope {
  GUILD
  USER
}

"""Query root"""
type Query {
  guild(id: Long!): GuildData
  allPlaylists(scope: PlaylistScope!, ownerId: Long!): [Playlist]!
  playlist(id: String!): Playlist
  language(languageKey: String): JSONObject
  allCommands(module: Module): [ICommandMain]
}

"""Unrepresentable type"""
scalar UNREPRESENTABLE

"""UUID String"""
scalar UUID
